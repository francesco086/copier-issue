generate copies:
  image: python:3.11-alpine
  stage: build
  resource_group: integration-test
  before_script:
    - echo "Generate copy from integration test input ${TEST_INPUT_DIR}"
    - apk update && apk add git
    - pip install -U pip setuptools wheel && pip install -r ci_cd/requirements.txt
    - . ci_cd/utils.sh
    - mkdir dst && cp ${TEST_INPUT_DIR}/../.gitlab-ci.yml dst/.gitlab-ci.yml && cd dst
    - git config --global user.email "docker-image-creator@gitlab.com"
    - git config --global user.name "docker-image-creator"
  script:
    - copier copy --data docker_image_name=apl211945-docker-image-creator-test ../ docker_image
    - if [[ -e ${TEST_INPUT_DIR}/Dockerfile ]]; then cp ${TEST_INPUT_DIR}/Dockerfile docker_image/Dockerfile; fi
    - if [[ -e ${TEST_INPUT_DIR}/test.sh ]]; then cp ${TEST_INPUT_DIR}/test.sh docker_image/test.sh; fi
    - if [[ -e ${TEST_INPUT_DIR}/determine-docker-image-tags.sh ]]; then cp ${TEST_INPUT_DIR}/determine-docker-image-tags.sh docker_image/determine-docker-image-tags.sh; fi
    - hard_push_to_repo "." "${TEST_REPO_URL}"

run test repo pipeline:
  stage: test
  resource_group: integration-test
  trigger:
    project: repos/data-science-lib/templates/docker-image-creator-test-repo
    strategy: depend
